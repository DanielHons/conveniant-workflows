# Runs on branches with a name like 'release/v{TAG}', tagging each commit with an incrementing release candidate
# like v{TAG}.rc-{n}


name: 'ðŸ¤š ðŸš¨ Branch to hotfix'
on:
  push:
    branches:
      - 'release/v*'
jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: 'Get tag names'
        id: tags
        run: |
          lastTag=$(git describe --abbrev=0 HEAD) || lastTag=NONE
          if [[ $lastTag =~ $branchTag-hotfix\.([0-9]*) ]]; then
            current="$branchTag-hotfix.$((BASH_REMATCH[1]+1))"
          else
            current="$branchTag-hotfix.0"
          fi

          echo $current
          echo "::set-output name=previous::$lastTag"
          echo "::set-output name=hotfixTag::$current"

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ steps.tags.outputs.hotfixTag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail if tag exists
        if: steps.checkTag.outputs.exists == 'true'
        run: |
          echo "Tag already exists - The hotfix branch you selected might not be up to date with master"
          exit 1

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.tags.outputs.hotfixTag }}
          tag_prefix: ""

      - name: Enhance changelog
        id: changelog
        env:
          CHANGELOG: ${{ steps.tag_version.outputs.changelog }}
          JIRA_PROJECT: TT
          JIRA_HOST: tickets.customer.com
        run: |
          newChangelog="$(echo "$CHANGELOG" |  sed "s/$JIRA_PROJECT-\([0-9]*\)/[$JIRA_PROJECT-\1](https:\/\/$JIRA_HOST\/browse\/$JIRA_PROJECT-\1)/g")"
          echo "$newChangelog" > release_changelog.md
          echo "::set-output name=enhanced::$newChangelog"

      - name: Release Hotfix
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          tag_name: ${{ steps.tags.outputs.hotfixTag }}
          name: ${{ steps.tags.outputs.hotfixTag }}
          body_path: release_changelog.md
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge  -> master
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: ${{ steps.extract_branch.outputs.branch }}
          target-branch: master
          commit-message: "chore(release): Hotfix ${{ steps.tags.outputs.relTag }}"
      - name: Delete release branch
        env:
          branch: ${{ steps.tags.outputs.releaseBranch }}
        run: |
          git push -d origin $branch
      - name: Create PR master --> develop
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "develop"
          source_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_label: "feature, automated pr"
          pr_allow_empty: true
          pr_title: "Merge master into develop after release ${{ steps.tags.outputs.relTag }}"
