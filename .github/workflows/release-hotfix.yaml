# When run on hotfix-branches like 'hotfix/v{TAG}', this pipeline and merges it into master and aims for prod deployment.

name: 'ðŸ¤š ðŸš¨ Apply Hotfix'
on:
  workflow_dispatch:

jobs:
  hotfix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Calculate tag names'
        id: tags
        run: |
          hotfixBranch=$(git branch --show-current | grep hotfix/v*)
          branchTag=${hotfixBranch#hotfix/}
          headTag=$(git describe --tags | grep "$branchTag")
          echo "::set-output name=preRelTag::$headTag"
          echo "::set-output name=hotfixBranch::branchTag"
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.tags.outputs.relTag }}
          tag_prefix: ""
          dry_run: true
      - name: Enhance changelog
        id: changelog
        env:
          CHANGELOG: ${{ steps.tag_version.outputs.changelog }}
          JIRA_PROJECT: TT
          JIRA_HOST: tickets.customer.com
        run: |
          newChangelog="$(echo "$CHANGELOG" |  sed "s/$JIRA_PROJECT-\([0-9]*\)/[$JIRA_PROJECT-\1](https:\/\/$JIRA_HOST\/browse\/$JIRA_PROJECT-\1)/g")"
          echo "$newChangelog" > release_changelog.md
          echo "::set-output name=enhanced::$newChangelog"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tags.outputs.relTag }}
          name: ${{ steps.tags.outputs.relTag }}
          body_path: release_changelog.md
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge  -> master
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: ${{ steps.tags.outputs.hotfixBranch }}
          target-branch: master
          commit-message: "chore(release): ${{ steps.tags.outputs.relTag }}"
      - name: Delete hotfix branch
        env:
          branch: ${{ steps.tags.outputs.hotfixBranch }}
        run: |
          git push -d origin $branch
      - name: Create PR master --> develop
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "develop"
          source_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_label: "feature, automated pr"
          pr_allow_empty: true
          pr_title: "Merge master into develop after hotfix ${{ steps.tags.outputs.headTag }}"
